{
	"id": "d08c766c8e31b169f5ff684ba7655138",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Voting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nenum WorkflowStatus {\n    RegisteringVoters,\n    ProposalsRegistrationStarted,\n    ProposalsRegistrationEnded,\n    VotingSessionStarted,\n    VotingSessionEnded,\n    VotesTallied\n}\n\ncontract Voting is Ownable {\n    event VoterRegistered(address voterAddress);\n    event WorkflowStatusChange(\n        WorkflowStatus previousStatus,\n        WorkflowStatus newStatus\n    );\n    event ProposalRegistered(uint256 proposalId);\n    event Voted(address voter, uint256 proposalId);\n\n    struct Request {\n        WorkflowStatus status;\n        Voter[] voter;\n        Proposal[] proposals;\n    }\n\n    struct Voter {\n        bool isRegistered;\n        bool hasVoted;\n        uint256 votedProposalId;\n    }\n    struct Proposal {\n        string description;\n        uint256 voteCount;\n    }\n\n    uint256 winningProposalId; // Le gagnant\n\n    Request ballot;\n\n    constructor() {\n        ballot.status = WorkflowStatus.RegisteringVoters;\n    }\n    /*\n\n    REGISTRATION\n\n    */\n\n    /*\n\n    VOTE\n\n    */\n\n\n    /*\n\n    RESULTS;\n\n    */\n\n    function getWinner() external view returns (address) {\n        return address(this); // TBD\n    }\n\n    function getVoteDetails() external view returns (Proposal[] memory) {\n        return ballot.proposals;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Voting.sol": {
				"Voting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voterAddress",
									"type": "address"
								}
							],
							"name": "VoterRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum WorkflowStatus",
									"name": "previousStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum WorkflowStatus",
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "WorkflowStatusChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getVoteDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "voteCount",
											"type": "uint256"
										}
									],
									"internalType": "struct Voting.Proposal[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWinner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Voting.sol\":292:1347  contract Voting is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Voting.sol\":959:1038  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Voting.sol\":999:1031  WorkflowStatus.RegisteringVoters */\n  0x00\n    /* \"Voting.sol\":983:989  ballot */\n  0x02\n    /* \"Voting.sol\":983:996  ballot.status */\n  0x00\n  add\n  0x00\n    /* \"Voting.sol\":983:1031  ballot.status = WorkflowStatus.RegisteringVoters */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x05\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  tag_11\n  tag_12\n  jump\t// in\ntag_11:\ntag_10:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Voting.sol\":292:1347  contract Voting is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_12:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"Voting.sol\":292:1347  contract Voting is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Voting.sol\":292:1347  contract Voting is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x134c39cc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8e7ea5b2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Voting.sol\":1237:1345  function getVoteDetails() external view returns (Proposal[] memory) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Voting.sol\":1134:1231  function getWinner() external view returns (address) {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Voting.sol\":1237:1345  function getVoteDetails() external view returns (Proposal[] memory) {... */\n    tag_9:\n        /* \"Voting.sol\":1286:1303  Proposal[] memory */\n      0x60\n        /* \"Voting.sol\":1322:1328  ballot */\n      0x02\n        /* \"Voting.sol\":1322:1338  ballot.proposals */\n      dup1\n      add\n        /* \"Voting.sol\":1315:1338  return ballot.proposals */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_26:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_27\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_31\n      swap1\n      tag_30\n      jump\t// in\n    tag_31:\n      dup1\n      iszero\n      tag_32\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_33\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_32)\n    tag_33:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_34:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_34\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_26)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Voting.sol\":1237:1345  function getVoteDetails() external view returns (Proposal[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Voting.sol\":1134:1231  function getWinner() external view returns (address) {... */\n    tag_19:\n        /* \"Voting.sol\":1178:1185  address */\n      0x00\n        /* \"Voting.sol\":1212:1216  this */\n      address\n        /* \"Voting.sol\":1197:1217  return address(this) */\n      swap1\n      pop\n        /* \"Voting.sol\":1134:1231  function getWinner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_15\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_59:\n        /* \"#utility.yul\":99:105   */\n      0x00\n        /* \"#utility.yul\":133:138   */\n      dup2\n        /* \"#utility.yul\":127:139   */\n      mload\n        /* \"#utility.yul\":117:139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:361   */\n    tag_60:\n        /* \"#utility.yul\":276:287   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":305:308   */\n      dup3\n        /* \"#utility.yul\":298:317   */\n      mstore\n        /* \"#utility.yul\":350:354   */\n      0x20\n        /* \"#utility.yul\":345:348   */\n      dup3\n        /* \"#utility.yul\":341:355   */\n      add\n        /* \"#utility.yul\":326:355   */\n      swap1\n      pop\n        /* \"#utility.yul\":152:361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":367:524   */\n    tag_61:\n        /* \"#utility.yul\":459:463   */\n      0x00\n        /* \"#utility.yul\":482:485   */\n      dup2\n        /* \"#utility.yul\":474:485   */\n      swap1\n      pop\n        /* \"#utility.yul\":512:516   */\n      0x20\n        /* \"#utility.yul\":507:510   */\n      dup3\n        /* \"#utility.yul\":503:517   */\n      add\n        /* \"#utility.yul\":495:517   */\n      swap1\n      pop\n        /* \"#utility.yul\":367:524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":530:629   */\n    tag_62:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":616:621   */\n      dup2\n        /* \"#utility.yul\":610:622   */\n      mload\n        /* \"#utility.yul\":600:622   */\n      swap1\n      pop\n        /* \"#utility.yul\":530:629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:794   */\n    tag_63:\n        /* \"#utility.yul\":709:720   */\n      0x00\n        /* \"#utility.yul\":743:749   */\n      dup3\n        /* \"#utility.yul\":738:741   */\n      dup3\n        /* \"#utility.yul\":731:750   */\n      mstore\n        /* \"#utility.yul\":783:787   */\n      0x20\n        /* \"#utility.yul\":778:781   */\n      dup3\n        /* \"#utility.yul\":774:788   */\n      add\n        /* \"#utility.yul\":759:788   */\n      swap1\n      pop\n        /* \"#utility.yul\":635:794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1046   */\n    tag_64:\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":891:1004   */\n    tag_94:\n        /* \"#utility.yul\":905:911   */\n      dup4\n        /* \"#utility.yul\":902:903   */\n      dup2\n        /* \"#utility.yul\":899:912   */\n      lt\n        /* \"#utility.yul\":891:1004   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      dup1\n        /* \"#utility.yul\":985:988   */\n      dup3\n        /* \"#utility.yul\":981:992   */\n      add\n        /* \"#utility.yul\":975:993   */\n      mload\n        /* \"#utility.yul\":971:972   */\n      dup2\n        /* \"#utility.yul\":966:969   */\n      dup5\n        /* \"#utility.yul\":962:973   */\n      add\n        /* \"#utility.yul\":955:994   */\n      mstore\n        /* \"#utility.yul\":927:929   */\n      0x20\n        /* \"#utility.yul\":924:925   */\n      dup2\n        /* \"#utility.yul\":920:930   */\n      add\n        /* \"#utility.yul\":915:930   */\n      swap1\n      pop\n        /* \"#utility.yul\":891:1004   */\n      jump(tag_94)\n    tag_96:\n        /* \"#utility.yul\":1038:1039   */\n      0x00\n        /* \"#utility.yul\":1029:1035   */\n      dup5\n        /* \"#utility.yul\":1024:1027   */\n      dup5\n        /* \"#utility.yul\":1020:1036   */\n      add\n        /* \"#utility.yul\":1013:1040   */\n      mstore\n        /* \"#utility.yul\":862:1046   */\n      pop\n        /* \"#utility.yul\":800:1046   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1154   */\n    tag_65:\n        /* \"#utility.yul\":1093:1099   */\n      0x00\n        /* \"#utility.yul\":1144:1146   */\n      0x1f\n        /* \"#utility.yul\":1140:1147   */\n      not\n        /* \"#utility.yul\":1135:1137   */\n      0x1f\n        /* \"#utility.yul\":1128:1133   */\n      dup4\n        /* \"#utility.yul\":1124:1138   */\n      add\n        /* \"#utility.yul\":1120:1148   */\n      and\n        /* \"#utility.yul\":1110:1148   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1160:1517   */\n    tag_66:\n        /* \"#utility.yul\":1238:1241   */\n      0x00\n        /* \"#utility.yul\":1266:1305   */\n      tag_99\n        /* \"#utility.yul\":1299:1304   */\n      dup3\n        /* \"#utility.yul\":1266:1305   */\n      tag_62\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1321:1382   */\n      tag_100\n        /* \"#utility.yul\":1375:1381   */\n      dup2\n        /* \"#utility.yul\":1370:1373   */\n      dup6\n        /* \"#utility.yul\":1321:1382   */\n      tag_63\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1314:1382   */\n      swap4\n      pop\n        /* \"#utility.yul\":1391:1456   */\n      tag_101\n        /* \"#utility.yul\":1449:1455   */\n      dup2\n        /* \"#utility.yul\":1444:1447   */\n      dup6\n        /* \"#utility.yul\":1437:1441   */\n      0x20\n        /* \"#utility.yul\":1430:1435   */\n      dup7\n        /* \"#utility.yul\":1426:1442   */\n      add\n        /* \"#utility.yul\":1391:1456   */\n      tag_64\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1481:1510   */\n      tag_102\n        /* \"#utility.yul\":1503:1509   */\n      dup2\n        /* \"#utility.yul\":1481:1510   */\n      tag_65\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1476:1479   */\n      dup5\n        /* \"#utility.yul\":1472:1511   */\n      add\n        /* \"#utility.yul\":1465:1511   */\n      swap2\n      pop\n        /* \"#utility.yul\":1242:1517   */\n      pop\n        /* \"#utility.yul\":1160:1517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1523:1600   */\n    tag_67:\n        /* \"#utility.yul\":1560:1567   */\n      0x00\n        /* \"#utility.yul\":1589:1594   */\n      dup2\n        /* \"#utility.yul\":1578:1594   */\n      swap1\n      pop\n        /* \"#utility.yul\":1523:1600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1606:1714   */\n    tag_68:\n        /* \"#utility.yul\":1683:1707   */\n      tag_105\n        /* \"#utility.yul\":1701:1706   */\n      dup2\n        /* \"#utility.yul\":1683:1707   */\n      tag_67\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1678:1681   */\n      dup3\n        /* \"#utility.yul\":1671:1708   */\n      mstore\n        /* \"#utility.yul\":1606:1714   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1776:2384   */\n    tag_69:\n        /* \"#utility.yul\":1885:1888   */\n      0x00\n        /* \"#utility.yul\":1921:1925   */\n      0x40\n        /* \"#utility.yul\":1916:1919   */\n      dup4\n        /* \"#utility.yul\":1912:1926   */\n      add\n        /* \"#utility.yul\":2015:2019   */\n      0x00\n        /* \"#utility.yul\":2008:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2020   */\n      add\n        /* \"#utility.yul\":1998:2021   */\n      mload\n        /* \"#utility.yul\":2068:2071   */\n      dup5\n        /* \"#utility.yul\":2062:2066   */\n      dup3\n        /* \"#utility.yul\":2058:2072   */\n      sub\n        /* \"#utility.yul\":2051:2055   */\n      0x00\n        /* \"#utility.yul\":2046:2049   */\n      dup7\n        /* \"#utility.yul\":2042:2056   */\n      add\n        /* \"#utility.yul\":2035:2073   */\n      mstore\n        /* \"#utility.yul\":2094:2167   */\n      tag_107\n        /* \"#utility.yul\":2162:2166   */\n      dup3\n        /* \"#utility.yul\":2148:2160   */\n      dup3\n        /* \"#utility.yul\":2094:2167   */\n      tag_66\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2086:2167   */\n      swap2\n      pop\n        /* \"#utility.yul\":1936:2178   */\n      pop\n        /* \"#utility.yul\":2265:2269   */\n      0x20\n        /* \"#utility.yul\":2258:2263   */\n      dup4\n        /* \"#utility.yul\":2254:2270   */\n      add\n        /* \"#utility.yul\":2248:2271   */\n      mload\n        /* \"#utility.yul\":2284:2347   */\n      tag_108\n        /* \"#utility.yul\":2341:2345   */\n      0x20\n        /* \"#utility.yul\":2336:2339   */\n      dup7\n        /* \"#utility.yul\":2332:2346   */\n      add\n        /* \"#utility.yul\":2318:2330   */\n      dup3\n        /* \"#utility.yul\":2284:2347   */\n      tag_68\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2188:2357   */\n      pop\n        /* \"#utility.yul\":2374:2378   */\n      dup1\n        /* \"#utility.yul\":2367:2378   */\n      swap2\n      pop\n        /* \"#utility.yul\":1890:2384   */\n      pop\n        /* \"#utility.yul\":1776:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2646   */\n    tag_70:\n        /* \"#utility.yul\":2509:2519   */\n      0x00\n        /* \"#utility.yul\":2544:2640   */\n      tag_110\n        /* \"#utility.yul\":2636:2639   */\n      dup4\n        /* \"#utility.yul\":2628:2634   */\n      dup4\n        /* \"#utility.yul\":2544:2640   */\n      tag_69\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2530:2640   */\n      swap1\n      pop\n        /* \"#utility.yul\":2390:2646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2790   */\n    tag_71:\n        /* \"#utility.yul\":2747:2751   */\n      0x00\n        /* \"#utility.yul\":2779:2783   */\n      0x20\n        /* \"#utility.yul\":2774:2777   */\n      dup3\n        /* \"#utility.yul\":2770:2784   */\n      add\n        /* \"#utility.yul\":2762:2784   */\n      swap1\n      pop\n        /* \"#utility.yul\":2652:2790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2856:3967   */\n    tag_72:\n        /* \"#utility.yul\":3025:3028   */\n      0x00\n        /* \"#utility.yul\":3054:3133   */\n      tag_113\n        /* \"#utility.yul\":3127:3132   */\n      dup3\n        /* \"#utility.yul\":3054:3133   */\n      tag_59\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3149:3260   */\n      tag_114\n        /* \"#utility.yul\":3253:3259   */\n      dup2\n        /* \"#utility.yul\":3248:3251   */\n      dup6\n        /* \"#utility.yul\":3149:3260   */\n      tag_60\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3142:3260   */\n      swap4\n      pop\n        /* \"#utility.yul\":3286:3289   */\n      dup4\n        /* \"#utility.yul\":3331:3335   */\n      0x20\n        /* \"#utility.yul\":3323:3329   */\n      dup3\n        /* \"#utility.yul\":3319:3336   */\n      mul\n        /* \"#utility.yul\":3314:3317   */\n      dup6\n        /* \"#utility.yul\":3310:3337   */\n      add\n        /* \"#utility.yul\":3361:3442   */\n      tag_115\n        /* \"#utility.yul\":3436:3441   */\n      dup6\n        /* \"#utility.yul\":3361:3442   */\n      tag_61\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3465:3472   */\n      dup1\n        /* \"#utility.yul\":3496:3497   */\n      0x00\n        /* \"#utility.yul\":3481:3922   */\n    tag_116:\n        /* \"#utility.yul\":3506:3512   */\n      dup6\n        /* \"#utility.yul\":3503:3504   */\n      dup2\n        /* \"#utility.yul\":3500:3513   */\n      lt\n        /* \"#utility.yul\":3481:3922   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3577:3586   */\n      dup5\n        /* \"#utility.yul\":3571:3575   */\n      dup5\n        /* \"#utility.yul\":3567:3587   */\n      sub\n        /* \"#utility.yul\":3562:3565   */\n      dup10\n        /* \"#utility.yul\":3555:3588   */\n      mstore\n        /* \"#utility.yul\":3628:3634   */\n      dup2\n        /* \"#utility.yul\":3622:3635   */\n      mload\n        /* \"#utility.yul\":3656:3770   */\n      tag_119\n        /* \"#utility.yul\":3765:3769   */\n      dup6\n        /* \"#utility.yul\":3750:3763   */\n      dup3\n        /* \"#utility.yul\":3656:3770   */\n      tag_70\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3648:3770   */\n      swap5\n      pop\n        /* \"#utility.yul\":3793:3878   */\n      tag_120\n        /* \"#utility.yul\":3871:3877   */\n      dup4\n        /* \"#utility.yul\":3793:3878   */\n      tag_71\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3783:3878   */\n      swap3\n      pop\n        /* \"#utility.yul\":3907:3911   */\n      0x20\n        /* \"#utility.yul\":3902:3905   */\n      dup11\n        /* \"#utility.yul\":3898:3912   */\n      add\n        /* \"#utility.yul\":3891:3912   */\n      swap10\n      pop\n        /* \"#utility.yul\":3541:3922   */\n      pop\n        /* \"#utility.yul\":3528:3529   */\n      0x01\n        /* \"#utility.yul\":3525:3526   */\n      dup2\n        /* \"#utility.yul\":3521:3530   */\n      add\n        /* \"#utility.yul\":3516:3530   */\n      swap1\n      pop\n        /* \"#utility.yul\":3481:3922   */\n      jump(tag_116)\n    tag_118:\n        /* \"#utility.yul\":3485:3499   */\n      pop\n        /* \"#utility.yul\":3938:3942   */\n      dup3\n        /* \"#utility.yul\":3931:3942   */\n      swap8\n      pop\n        /* \"#utility.yul\":3958:3961   */\n      dup8\n        /* \"#utility.yul\":3951:3961   */\n      swap6\n      pop\n        /* \"#utility.yul\":3030:3967   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2856:3967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4446   */\n    tag_11:\n        /* \"#utility.yul\":4166:4170   */\n      0x00\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4193:4202   */\n      dup3\n        /* \"#utility.yul\":4189:4207   */\n      add\n        /* \"#utility.yul\":4181:4207   */\n      swap1\n      pop\n        /* \"#utility.yul\":4253:4262   */\n      dup2\n        /* \"#utility.yul\":4247:4251   */\n      dup2\n        /* \"#utility.yul\":4243:4263   */\n      sub\n        /* \"#utility.yul\":4239:4240   */\n      0x00\n        /* \"#utility.yul\":4228:4237   */\n      dup4\n        /* \"#utility.yul\":4224:4241   */\n      add\n        /* \"#utility.yul\":4217:4264   */\n      mstore\n        /* \"#utility.yul\":4281:4439   */\n      tag_122\n        /* \"#utility.yul\":4434:4438   */\n      dup2\n        /* \"#utility.yul\":4425:4431   */\n      dup5\n        /* \"#utility.yul\":4281:4439   */\n      tag_72\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4273:4439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4452:4578   */\n    tag_73:\n        /* \"#utility.yul\":4489:4496   */\n      0x00\n        /* \"#utility.yul\":4529:4571   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4522:4527   */\n      dup3\n        /* \"#utility.yul\":4518:4572   */\n      and\n        /* \"#utility.yul\":4507:4572   */\n      swap1\n      pop\n        /* \"#utility.yul\":4452:4578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4584:4680   */\n    tag_74:\n        /* \"#utility.yul\":4621:4628   */\n      0x00\n        /* \"#utility.yul\":4650:4674   */\n      tag_125\n        /* \"#utility.yul\":4668:4673   */\n      dup3\n        /* \"#utility.yul\":4650:4674   */\n      tag_73\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4639:4674   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:4804   */\n    tag_75:\n        /* \"#utility.yul\":4773:4797   */\n      tag_127\n        /* \"#utility.yul\":4791:4796   */\n      dup2\n        /* \"#utility.yul\":4773:4797   */\n      tag_74\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4768:4771   */\n      dup3\n        /* \"#utility.yul\":4761:4798   */\n      mstore\n        /* \"#utility.yul\":4686:4804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4810:5032   */\n    tag_17:\n        /* \"#utility.yul\":4903:4907   */\n      0x00\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4930:4939   */\n      dup3\n        /* \"#utility.yul\":4926:4944   */\n      add\n        /* \"#utility.yul\":4918:4944   */\n      swap1\n      pop\n        /* \"#utility.yul\":4954:5025   */\n      tag_129\n        /* \"#utility.yul\":5022:5023   */\n      0x00\n        /* \"#utility.yul\":5011:5020   */\n      dup4\n        /* \"#utility.yul\":5007:5024   */\n      add\n        /* \"#utility.yul\":4998:5004   */\n      dup5\n        /* \"#utility.yul\":4954:5025   */\n      tag_75\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4810:5032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5119:5236   */\n    tag_77:\n        /* \"#utility.yul\":5228:5229   */\n      0x00\n        /* \"#utility.yul\":5225:5226   */\n      dup1\n        /* \"#utility.yul\":5218:5230   */\n      revert\n        /* \"#utility.yul\":5365:5487   */\n    tag_79:\n        /* \"#utility.yul\":5438:5462   */\n      tag_134\n        /* \"#utility.yul\":5456:5461   */\n      dup2\n        /* \"#utility.yul\":5438:5462   */\n      tag_74\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5431:5436   */\n      dup2\n        /* \"#utility.yul\":5428:5463   */\n      eq\n        /* \"#utility.yul\":5418:5481   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":5477:5478   */\n      0x00\n        /* \"#utility.yul\":5474:5475   */\n      dup1\n        /* \"#utility.yul\":5467:5479   */\n      revert\n        /* \"#utility.yul\":5418:5481   */\n    tag_135:\n        /* \"#utility.yul\":5365:5487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5493:5632   */\n    tag_80:\n        /* \"#utility.yul\":5539:5544   */\n      0x00\n        /* \"#utility.yul\":5577:5583   */\n      dup2\n        /* \"#utility.yul\":5564:5584   */\n      calldataload\n        /* \"#utility.yul\":5555:5584   */\n      swap1\n      pop\n        /* \"#utility.yul\":5593:5626   */\n      tag_137\n        /* \"#utility.yul\":5620:5625   */\n      dup2\n        /* \"#utility.yul\":5593:5626   */\n      tag_79\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5493:5632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:5967   */\n    tag_23:\n        /* \"#utility.yul\":5697:5703   */\n      0x00\n        /* \"#utility.yul\":5746:5748   */\n      0x20\n        /* \"#utility.yul\":5734:5743   */\n      dup3\n        /* \"#utility.yul\":5725:5732   */\n      dup5\n        /* \"#utility.yul\":5721:5744   */\n      sub\n        /* \"#utility.yul\":5717:5749   */\n      slt\n        /* \"#utility.yul\":5714:5833   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":5752:5831   */\n      tag_140\n      tag_77\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5714:5833   */\n    tag_139:\n        /* \"#utility.yul\":5872:5873   */\n      0x00\n        /* \"#utility.yul\":5897:5950   */\n      tag_141\n        /* \"#utility.yul\":5942:5949   */\n      dup5\n        /* \"#utility.yul\":5933:5939   */\n      dup3\n        /* \"#utility.yul\":5922:5931   */\n      dup6\n        /* \"#utility.yul\":5918:5940   */\n      add\n        /* \"#utility.yul\":5897:5950   */\n      tag_80\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5887:5950   */\n      swap2\n      pop\n        /* \"#utility.yul\":5843:5960   */\n      pop\n        /* \"#utility.yul\":5638:5967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5973:6153   */\n    tag_81:\n        /* \"#utility.yul\":6021:6098   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6018:6019   */\n      0x00\n        /* \"#utility.yul\":6011:6099   */\n      mstore\n        /* \"#utility.yul\":6118:6122   */\n      0x22\n        /* \"#utility.yul\":6115:6116   */\n      0x04\n        /* \"#utility.yul\":6108:6123   */\n      mstore\n        /* \"#utility.yul\":6142:6146   */\n      0x24\n        /* \"#utility.yul\":6139:6140   */\n      0x00\n        /* \"#utility.yul\":6132:6147   */\n      revert\n        /* \"#utility.yul\":6159:6479   */\n    tag_30:\n        /* \"#utility.yul\":6203:6209   */\n      0x00\n        /* \"#utility.yul\":6240:6241   */\n      0x02\n        /* \"#utility.yul\":6234:6238   */\n      dup3\n        /* \"#utility.yul\":6230:6242   */\n      div\n        /* \"#utility.yul\":6220:6242   */\n      swap1\n      pop\n        /* \"#utility.yul\":6287:6288   */\n      0x01\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      and\n        /* \"#utility.yul\":6308:6326   */\n      dup1\n        /* \"#utility.yul\":6298:6379   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":6364:6368   */\n      0x7f\n        /* \"#utility.yul\":6356:6362   */\n      dup3\n        /* \"#utility.yul\":6352:6369   */\n      and\n        /* \"#utility.yul\":6342:6369   */\n      swap2\n      pop\n        /* \"#utility.yul\":6298:6379   */\n    tag_144:\n        /* \"#utility.yul\":6426:6428   */\n      0x20\n        /* \"#utility.yul\":6418:6424   */\n      dup3\n        /* \"#utility.yul\":6415:6429   */\n      lt\n        /* \"#utility.yul\":6395:6413   */\n      dup2\n        /* \"#utility.yul\":6392:6430   */\n      sub\n        /* \"#utility.yul\":6389:6473   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":6445:6463   */\n      tag_146\n      tag_81\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6389:6473   */\n    tag_145:\n        /* \"#utility.yul\":6210:6479   */\n      pop\n        /* \"#utility.yul\":6159:6479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6485:6654   */\n    tag_82:\n        /* \"#utility.yul\":6569:6580   */\n      0x00\n        /* \"#utility.yul\":6603:6609   */\n      dup3\n        /* \"#utility.yul\":6598:6601   */\n      dup3\n        /* \"#utility.yul\":6591:6610   */\n      mstore\n        /* \"#utility.yul\":6643:6647   */\n      0x20\n        /* \"#utility.yul\":6638:6641   */\n      dup3\n        /* \"#utility.yul\":6634:6648   */\n      add\n        /* \"#utility.yul\":6619:6648   */\n      swap1\n      pop\n        /* \"#utility.yul\":6485:6654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6660:6885   */\n    tag_83:\n        /* \"#utility.yul\":6800:6834   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6796:6797   */\n      0x00\n        /* \"#utility.yul\":6788:6794   */\n      dup3\n        /* \"#utility.yul\":6784:6798   */\n      add\n        /* \"#utility.yul\":6777:6835   */\n      mstore\n        /* \"#utility.yul\":6869:6877   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6864:6866   */\n      0x20\n        /* \"#utility.yul\":6856:6862   */\n      dup3\n        /* \"#utility.yul\":6852:6867   */\n      add\n        /* \"#utility.yul\":6845:6878   */\n      mstore\n        /* \"#utility.yul\":6660:6885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6891:7257   */\n    tag_84:\n        /* \"#utility.yul\":7033:7036   */\n      0x00\n        /* \"#utility.yul\":7054:7121   */\n      tag_150\n        /* \"#utility.yul\":7118:7120   */\n      0x26\n        /* \"#utility.yul\":7113:7116   */\n      dup4\n        /* \"#utility.yul\":7054:7121   */\n      tag_82\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7047:7121   */\n      swap2\n      pop\n        /* \"#utility.yul\":7130:7223   */\n      tag_151\n        /* \"#utility.yul\":7219:7222   */\n      dup3\n        /* \"#utility.yul\":7130:7223   */\n      tag_83\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7248:7250   */\n      0x40\n        /* \"#utility.yul\":7243:7246   */\n      dup3\n        /* \"#utility.yul\":7239:7251   */\n      add\n        /* \"#utility.yul\":7232:7251   */\n      swap1\n      pop\n        /* \"#utility.yul\":6891:7257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7263:7682   */\n    tag_48:\n        /* \"#utility.yul\":7429:7433   */\n      0x00\n        /* \"#utility.yul\":7467:7469   */\n      0x20\n        /* \"#utility.yul\":7456:7465   */\n      dup3\n        /* \"#utility.yul\":7452:7470   */\n      add\n        /* \"#utility.yul\":7444:7470   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7525   */\n      dup2\n        /* \"#utility.yul\":7510:7514   */\n      dup2\n        /* \"#utility.yul\":7506:7526   */\n      sub\n        /* \"#utility.yul\":7502:7503   */\n      0x00\n        /* \"#utility.yul\":7491:7500   */\n      dup4\n        /* \"#utility.yul\":7487:7504   */\n      add\n        /* \"#utility.yul\":7480:7527   */\n      mstore\n        /* \"#utility.yul\":7544:7675   */\n      tag_153\n        /* \"#utility.yul\":7670:7674   */\n      dup2\n        /* \"#utility.yul\":7544:7675   */\n      tag_84\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7536:7675   */\n      swap1\n      pop\n        /* \"#utility.yul\":7263:7682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7688:7870   */\n    tag_85:\n        /* \"#utility.yul\":7828:7862   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7824:7825   */\n      0x00\n        /* \"#utility.yul\":7816:7822   */\n      dup3\n        /* \"#utility.yul\":7812:7826   */\n      add\n        /* \"#utility.yul\":7805:7863   */\n      mstore\n        /* \"#utility.yul\":7688:7870   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7876:8242   */\n    tag_86:\n        /* \"#utility.yul\":8018:8021   */\n      0x00\n        /* \"#utility.yul\":8039:8106   */\n      tag_156\n        /* \"#utility.yul\":8103:8105   */\n      0x20\n        /* \"#utility.yul\":8098:8101   */\n      dup4\n        /* \"#utility.yul\":8039:8106   */\n      tag_82\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8032:8106   */\n      swap2\n      pop\n        /* \"#utility.yul\":8115:8208   */\n      tag_157\n        /* \"#utility.yul\":8204:8207   */\n      dup3\n        /* \"#utility.yul\":8115:8208   */\n      tag_85\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8233:8235   */\n      0x20\n        /* \"#utility.yul\":8228:8231   */\n      dup3\n        /* \"#utility.yul\":8224:8236   */\n      add\n        /* \"#utility.yul\":8217:8236   */\n      swap1\n      pop\n        /* \"#utility.yul\":7876:8242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8248:8667   */\n    tag_56:\n        /* \"#utility.yul\":8414:8418   */\n      0x00\n        /* \"#utility.yul\":8452:8454   */\n      0x20\n        /* \"#utility.yul\":8441:8450   */\n      dup3\n        /* \"#utility.yul\":8437:8455   */\n      add\n        /* \"#utility.yul\":8429:8455   */\n      swap1\n      pop\n        /* \"#utility.yul\":8501:8510   */\n      dup2\n        /* \"#utility.yul\":8495:8499   */\n      dup2\n        /* \"#utility.yul\":8491:8511   */\n      sub\n        /* \"#utility.yul\":8487:8488   */\n      0x00\n        /* \"#utility.yul\":8476:8485   */\n      dup4\n        /* \"#utility.yul\":8472:8489   */\n      add\n        /* \"#utility.yul\":8465:8512   */\n      mstore\n        /* \"#utility.yul\":8529:8660   */\n      tag_159\n        /* \"#utility.yul\":8655:8659   */\n      dup2\n        /* \"#utility.yul\":8529:8660   */\n      tag_86\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8521:8660   */\n      swap1\n      pop\n        /* \"#utility.yul\":8248:8667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122037fc36d50b54c11559d4aa3fae8a64df24f6dad8a2637edfc781be18e909194664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_208": {
									"entryPoint": null,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 92,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 99,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:3"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061002c61002161005c60201b60201c565b61006360201b60201c565b5f60025f015f6101000a81548160ff0219169083600581111561005257610051610124565b5b0217905550610151565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6107da8061015e5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063134c39cc14610059578063715018a6146100775780638da5cb5b146100815780638e7ea5b21461009f578063f2fde38b146100bd575b5f80fd5b6100616100d9565b60405161006e9190610570565b60405180910390f35b61007f6101d0565b005b6100896101e3565b60405161009691906105cf565b60405180910390f35b6100a761020a565b6040516100b491906105cf565b60405180910390f35b6100d760048036038101906100d29190610616565b610211565b005b606060028001805480602002602001604051908101604052809291908181526020015f905b828210156101c7578382905f5260205f2090600202016040518060400160405290815f8201805461012e9061066e565b80601f016020809104026020016040519081016040528092919081815260200182805461015a9061066e565b80156101a55780601f1061017c576101008083540402835291602001916101a5565b820191905f5260205f20905b81548152906001019060200180831161018857829003601f168201915b50505050508152602001600182015481525050815260200190600101906100fe565b50505050905090565b6101d8610293565b6101e15f610311565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f30905090565b610219610293565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e9061071e565b60405180910390fd5b61029081610311565b50565b61029b6103d2565b73ffffffffffffffffffffffffffffffffffffffff166102b96101e3565b73ffffffffffffffffffffffffffffffffffffffff161461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610786565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561043957808201518184015260208101905061041e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61045e82610402565b610468818561040c565b935061047881856020860161041c565b61048181610444565b840191505092915050565b5f819050919050565b61049e8161048c565b82525050565b5f604083015f8301518482035f8601526104be8282610454565b91505060208301516104d36020860182610495565b508091505092915050565b5f6104e983836104a4565b905092915050565b5f602082019050919050565b5f610507826103d9565b61051181856103e3565b935083602082028501610523856103f3565b805f5b8581101561055e578484038952815161053f85826104de565b945061054a836104f1565b925060208a01995050600181019050610526565b50829750879550505050505092915050565b5f6020820190508181035f83015261058881846104fd565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105b982610590565b9050919050565b6105c9816105af565b82525050565b5f6020820190506105e25f8301846105c0565b92915050565b5f80fd5b6105f5816105af565b81146105ff575f80fd5b50565b5f81359050610610816105ec565b92915050565b5f6020828403121561062b5761062a6105e8565b5b5f61063884828501610602565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061068557607f821691505b60208210810361069857610697610641565b5b50919050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61070860268361069e565b9150610713826106ae565b604082019050919050565b5f6020820190508181035f830152610735816106fc565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61077060208361069e565b915061077b8261073c565b602082019050919050565b5f6020820190508181035f83015261079d81610764565b905091905056fea264697066735822122037fc36d50b54c11559d4aa3fae8a64df24f6dad8a2637edfc781be18e909194664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C PUSH2 0x21 PUSH2 0x5C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x63 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x52 JUMPI PUSH2 0x51 PUSH2 0x124 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x151 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7DA DUP1 PUSH2 0x15E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x134C39CC EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1C7 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x12E SWAP1 PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15A SWAP1 PUSH2 0x66E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x188 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1E1 PUSH0 PUSH2 0x311 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x293 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x290 DUP2 PUSH2 0x311 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x29B PUSH2 0x3D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B9 PUSH2 0x1E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x439 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x41E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x45E DUP3 PUSH2 0x402 JUMP JUMPDEST PUSH2 0x468 DUP2 DUP6 PUSH2 0x40C JUMP JUMPDEST SWAP4 POP PUSH2 0x478 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41C JUMP JUMPDEST PUSH2 0x481 DUP2 PUSH2 0x444 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x48C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x4BE DUP3 DUP3 PUSH2 0x454 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4D3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x495 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4E9 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x507 DUP3 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x511 DUP2 DUP6 PUSH2 0x3E3 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x523 DUP6 PUSH2 0x3F3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x53F DUP6 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP5 POP PUSH2 0x54A DUP4 PUSH2 0x4F1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x526 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x588 DUP2 DUP5 PUSH2 0x4FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5B9 DUP3 PUSH2 0x590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C9 DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP2 EQ PUSH2 0x5FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x610 DUP2 PUSH2 0x5EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62B JUMPI PUSH2 0x62A PUSH2 0x5E8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x638 DUP5 DUP3 DUP6 ADD PUSH2 0x602 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x685 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x698 JUMPI PUSH2 0x697 PUSH2 0x641 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x26 DUP4 PUSH2 0x69E JUMP JUMPDEST SWAP2 POP PUSH2 0x713 DUP3 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x735 DUP2 PUSH2 0x6FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x770 PUSH1 0x20 DUP4 PUSH2 0x69E JUMP JUMPDEST SWAP2 POP PUSH2 0x77B DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x79D DUP2 PUSH2 0x764 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xFC CALLDATASIZE 0xD5 SIGNEXTEND SLOAD 0xC1 ISZERO MSIZE 0xD4 0xAA EXTCODEHASH 0xAE DUP11 PUSH5 0xDF24F6DAD8 LOG2 PUSH4 0x7EDFC781 0xBE XOR 0xE9 MULMOD NOT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "292:1055:2:-:0;;;959:79;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;999::2;983:6;:13;;;:48;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;292:1055;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:180:3:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;292:1055:2;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 659,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 978,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 785,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getVoteDetails_230": {
									"entryPoint": 217,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWinner_219": {
									"entryPoint": 522,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 483,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 464,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 529,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8670:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "106:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "117:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "133:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "127:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "89:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "99:6:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "305:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "310:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "298:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "326:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "345:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "350:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "326:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "260:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "265:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "276:11:3",
														"type": ""
													}
												],
												"src": "152:209:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "464:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "474:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "482:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "474:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "495:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "507:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "495:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "451:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "459:4:3",
														"type": ""
													}
												],
												"src": "367:157:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "589:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "600:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "616:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "610:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "610:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "572:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "582:6:3",
														"type": ""
													}
												],
												"src": "530:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "721:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "738:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "743:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "731:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "759:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "778:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "759:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "693:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "698:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "709:11:3",
														"type": ""
													}
												],
												"src": "635:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "862:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "872:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "881:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "876:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "941:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "966:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "971:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "962:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "962:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "985:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "990:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "981:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "981:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "975:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "975:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "902:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "905:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "899:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "913:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "915:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "924:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "927:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "920:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "920:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "915:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "895:3:3",
																"statements": []
															},
															"src": "891:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1024:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1029:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1020:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1020:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1038:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1013:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "844:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "849:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "854:6:3",
														"type": ""
													}
												],
												"src": "800:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1128:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1135:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1120:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1083:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1093:6:3",
														"type": ""
													}
												],
												"src": "1052:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1242:275:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1252:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1299:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1266:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1256:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1314:68:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1370:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1375:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1321:48:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:61:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1437:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1444:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1391:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:65:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1465:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1476:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1503:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1481:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1472:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1465:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1238:3:3",
														"type": ""
													}
												],
												"src": "1160:357:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1568:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1578:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1589:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1578:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1550:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1560:7:3",
														"type": ""
													}
												],
												"src": "1523:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1678:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1701:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1683:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1683:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1671:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1649:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1656:3:3",
														"type": ""
													}
												],
												"src": "1606:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1890:494:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1900:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1916:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1921:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1912:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1904:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1936:242:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1978:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2008:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2015:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2004:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2004:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1998:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1982:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2046:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2051:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2042:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2042:14:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "2062:4:3"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2068:3:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2058:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:14:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2035:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2035:38:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2035:38:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2086:81:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2148:12:3"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2162:4:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2094:53:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2094:73:3"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "2086:4:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2188:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2228:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2258:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2265:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2254:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2254:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2248:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2232:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2318:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2336:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2341:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2332:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2332:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2284:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2284:63:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2367:11:3",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2374:4:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2367:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1869:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1876:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1885:3:3",
														"type": ""
													}
												],
												"src": "1776:608:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2520:126:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2530:110:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2636:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2544:83:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:96:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2530:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2493:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2501:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2509:10:3",
														"type": ""
													}
												],
												"src": "2390:256:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2752:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2762:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2774:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2770:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "2762:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2739:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "2747:4:3",
														"type": ""
													}
												],
												"src": "2652:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3030:937:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3040:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3127:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3054:72:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:79:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3044:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3142:118:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3248:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3253:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3149:98:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:111:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3142:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3269:20:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3286:3:3"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "3273:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3298:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3314:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3323:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3331:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:17:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:27:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3302:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3346:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3436:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3361:74:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3361:81:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "3350:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3451:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3465:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3455:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3541:381:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3562:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "3571:4:3"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "3577:9:3"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "3567:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3567:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3555:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3555:33:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3555:33:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3601:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3628:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3622:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3622:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3605:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3648:122:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3750:13:3"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "3765:4:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3656:93:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3656:114:3"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3648:4:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3783:95:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3871:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3793:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3793:85:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3783:6:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3891:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3907:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3898:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3898:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3891:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3503:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3500:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3500:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3514:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3516:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3525:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3528:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3521:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3521:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3516:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3485:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3487:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3496:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3491:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3481:441:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3931:11:3",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "3938:4:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3951:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3958:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3009:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3016:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3025:3:3",
														"type": ""
													}
												],
												"src": "2856:1111:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4171:275:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4181:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4193:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4189:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4181:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4228:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4239:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4224:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4224:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4247:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4253:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4243:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4243:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4217:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4273:166:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4425:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4434:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4281:143:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:158:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4273:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4143:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4155:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4166:4:3",
														"type": ""
													}
												],
												"src": "3973:473:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4497:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4507:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4522:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4529:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4518:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4507:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4479:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4489:7:3",
														"type": ""
													}
												],
												"src": "4452:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4629:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4639:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4668:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4650:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4650:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4639:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4621:7:3",
														"type": ""
													}
												],
												"src": "4584:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4751:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4768:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4791:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4773:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4773:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4761:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4739:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4746:3:3",
														"type": ""
													}
												],
												"src": "4686:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4908:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4918:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4918:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4998:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4954:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4954:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4880:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4892:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4903:4:3",
														"type": ""
													}
												],
												"src": "4810:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5078:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5088:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5098:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5088:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5071:6:3",
														"type": ""
													}
												],
												"src": "5038:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5208:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5228:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5119:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5331:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5351:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5341:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5242:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5408:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5465:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5474:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5477:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5467:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5467:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5467:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5431:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5456:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5438:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5438:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5428:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5421:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:43:3"
															},
															"nodeType": "YulIf",
															"src": "5418:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5401:5:3",
														"type": ""
													}
												],
												"src": "5365:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5545:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5555:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5577:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5564:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5555:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5620:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5593:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5593:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5523:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5531:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5539:5:3",
														"type": ""
													}
												],
												"src": "5493:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5704:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5750:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5752:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5725:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5721:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5721:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5746:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:32:3"
															},
															"nodeType": "YulIf",
															"src": "5714:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5843:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5858:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5872:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5862:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5887:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5922:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5933:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5918:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5918:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5942:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5897:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5897:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5887:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5674:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5685:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5697:6:3",
														"type": ""
													}
												],
												"src": "5638:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6001:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6018:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6021:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6011:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6011:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6115:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6118:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6108:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6108:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6139:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6142:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6132:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5973:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6220:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6234:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6251:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6255:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6328:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6342:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6356:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6364:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6352:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6352:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6342:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6308:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:26:3"
															},
															"nodeType": "YulIf",
															"src": "6298:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6431:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6445:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6445:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6445:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6395:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6418:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6426:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6415:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6415:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6392:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:38:3"
															},
															"nodeType": "YulIf",
															"src": "6389:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6194:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6203:6:3",
														"type": ""
													}
												],
												"src": "6159:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6581:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6598:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6603:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6619:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6638:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6643:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6634:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6619:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6553:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6558:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6569:11:3",
														"type": ""
													}
												],
												"src": "6485:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6766:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6788:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6796:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6784:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6800:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6777:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6856:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6864:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6852:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6852:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6869:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6845:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6758:6:3",
														"type": ""
													}
												],
												"src": "6660:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7037:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7047:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7113:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7118:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7054:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7047:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7130:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7130:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7232:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7243:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7248:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7239:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7239:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7232:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7025:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7033:3:3",
														"type": ""
													}
												],
												"src": "6891:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7434:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7444:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7456:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7467:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7452:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7452:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7444:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7491:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7502:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7487:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7510:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7506:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7506:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7480:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7480:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7670:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7544:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7414:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7429:4:3",
														"type": ""
													}
												],
												"src": "7263:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7794:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7816:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7824:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7812:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7812:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7828:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7805:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7786:6:3",
														"type": ""
													}
												],
												"src": "7688:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8022:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8032:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8098:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8103:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8039:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8032:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8204:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8115:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8115:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8115:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8217:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8228:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8233:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8010:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8018:3:3",
														"type": ""
													}
												],
												"src": "7876:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8419:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8429:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8441:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8452:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8437:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8429:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8476:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8487:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8472:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8472:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8495:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8501:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8491:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8491:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8465:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8465:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8521:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8655:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8529:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8521:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8399:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8414:4:3",
														"type": ""
													}
												],
												"src": "8248:419:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Voting.Proposal -> struct Voting.Proposal\n    function abi_encode_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // voteCount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Voting.Proposal[] -> struct Voting.Proposal[]\n    function abi_encode_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Proposal_$192_memory_ptr_to_t_struct$_Proposal_$192_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063134c39cc14610059578063715018a6146100775780638da5cb5b146100815780638e7ea5b21461009f578063f2fde38b146100bd575b5f80fd5b6100616100d9565b60405161006e9190610570565b60405180910390f35b61007f6101d0565b005b6100896101e3565b60405161009691906105cf565b60405180910390f35b6100a761020a565b6040516100b491906105cf565b60405180910390f35b6100d760048036038101906100d29190610616565b610211565b005b606060028001805480602002602001604051908101604052809291908181526020015f905b828210156101c7578382905f5260205f2090600202016040518060400160405290815f8201805461012e9061066e565b80601f016020809104026020016040519081016040528092919081815260200182805461015a9061066e565b80156101a55780601f1061017c576101008083540402835291602001916101a5565b820191905f5260205f20905b81548152906001019060200180831161018857829003601f168201915b50505050508152602001600182015481525050815260200190600101906100fe565b50505050905090565b6101d8610293565b6101e15f610311565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f30905090565b610219610293565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e9061071e565b60405180910390fd5b61029081610311565b50565b61029b6103d2565b73ffffffffffffffffffffffffffffffffffffffff166102b96101e3565b73ffffffffffffffffffffffffffffffffffffffff161461030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610786565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561043957808201518184015260208101905061041e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61045e82610402565b610468818561040c565b935061047881856020860161041c565b61048181610444565b840191505092915050565b5f819050919050565b61049e8161048c565b82525050565b5f604083015f8301518482035f8601526104be8282610454565b91505060208301516104d36020860182610495565b508091505092915050565b5f6104e983836104a4565b905092915050565b5f602082019050919050565b5f610507826103d9565b61051181856103e3565b935083602082028501610523856103f3565b805f5b8581101561055e578484038952815161053f85826104de565b945061054a836104f1565b925060208a01995050600181019050610526565b50829750879550505050505092915050565b5f6020820190508181035f83015261058881846104fd565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105b982610590565b9050919050565b6105c9816105af565b82525050565b5f6020820190506105e25f8301846105c0565b92915050565b5f80fd5b6105f5816105af565b81146105ff575f80fd5b50565b5f81359050610610816105ec565b92915050565b5f6020828403121561062b5761062a6105e8565b5b5f61063884828501610602565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061068557607f821691505b60208210810361069857610697610641565b5b50919050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61070860268361069e565b9150610713826106ae565b604082019050919050565b5f6020820190508181035f830152610735816106fc565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61077060208361069e565b915061077b8261073c565b602082019050919050565b5f6020820190508181035f83015261079d81610764565b905091905056fea264697066735822122037fc36d50b54c11559d4aa3fae8a64df24f6dad8a2637edfc781be18e909194664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x134C39CC EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1C7 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x12E SWAP1 PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15A SWAP1 PUSH2 0x66E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x188 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1E1 PUSH0 PUSH2 0x311 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x293 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x290 DUP2 PUSH2 0x311 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x29B PUSH2 0x3D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B9 PUSH2 0x1E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x439 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x41E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x45E DUP3 PUSH2 0x402 JUMP JUMPDEST PUSH2 0x468 DUP2 DUP6 PUSH2 0x40C JUMP JUMPDEST SWAP4 POP PUSH2 0x478 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41C JUMP JUMPDEST PUSH2 0x481 DUP2 PUSH2 0x444 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x48C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x4BE DUP3 DUP3 PUSH2 0x454 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4D3 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x495 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4E9 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x507 DUP3 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x511 DUP2 DUP6 PUSH2 0x3E3 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x523 DUP6 PUSH2 0x3F3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x53F DUP6 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP5 POP PUSH2 0x54A DUP4 PUSH2 0x4F1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x526 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x588 DUP2 DUP5 PUSH2 0x4FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5B9 DUP3 PUSH2 0x590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C9 DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 DUP2 PUSH2 0x5AF JUMP JUMPDEST DUP2 EQ PUSH2 0x5FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x610 DUP2 PUSH2 0x5EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62B JUMPI PUSH2 0x62A PUSH2 0x5E8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x638 DUP5 DUP3 DUP6 ADD PUSH2 0x602 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x685 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x698 JUMPI PUSH2 0x697 PUSH2 0x641 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x708 PUSH1 0x26 DUP4 PUSH2 0x69E JUMP JUMPDEST SWAP2 POP PUSH2 0x713 DUP3 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x735 DUP2 PUSH2 0x6FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x770 PUSH1 0x20 DUP4 PUSH2 0x69E JUMP JUMPDEST SWAP2 POP PUSH2 0x77B DUP3 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x79D DUP2 PUSH2 0x764 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xFC CALLDATASIZE 0xD5 SIGNEXTEND SLOAD 0xC1 ISZERO MSIZE 0xD4 0xAA EXTCODEHASH 0xAE DUP11 PUSH5 0xDF24F6DAD8 LOG2 PUSH4 0x7EDFC781 0xBE XOR 0xE9 MULMOD NOT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "292:1055:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1134:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1237:108:2;1286:17;1322:6;:16;;1315:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:108;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1134:97:2:-;1178:7;1212:4;1197:20;;1134:97;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:3:-;99:6;133:5;127:12;117:22;;7:139;;;:::o;152:209::-;276:11;310:6;305:3;298:19;350:4;345:3;341:14;326:29;;152:209;;;;:::o;367:157::-;459:4;482:3;474:11;;512:4;507:3;503:14;495:22;;367:157;;;:::o;530:99::-;582:6;616:5;610:12;600:22;;530:99;;;:::o;635:159::-;709:11;743:6;738:3;731:19;783:4;778:3;774:14;759:29;;635:159;;;;:::o;800:246::-;881:1;891:113;905:6;902:1;899:13;891:113;;;990:1;985:3;981:11;975:18;971:1;966:3;962:11;955:39;927:2;924:1;920:10;915:15;;891:113;;;1038:1;1029:6;1024:3;1020:16;1013:27;862:184;800:246;;;:::o;1052:102::-;1093:6;1144:2;1140:7;1135:2;1128:5;1124:14;1120:28;1110:38;;1052:102;;;:::o;1160:357::-;1238:3;1266:39;1299:5;1266:39;:::i;:::-;1321:61;1375:6;1370:3;1321:61;:::i;:::-;1314:68;;1391:65;1449:6;1444:3;1437:4;1430:5;1426:16;1391:65;:::i;:::-;1481:29;1503:6;1481:29;:::i;:::-;1476:3;1472:39;1465:46;;1242:275;1160:357;;;;:::o;1523:77::-;1560:7;1589:5;1578:16;;1523:77;;;:::o;1606:108::-;1683:24;1701:5;1683:24;:::i;:::-;1678:3;1671:37;1606:108;;:::o;1776:608::-;1885:3;1921:4;1916:3;1912:14;2015:4;2008:5;2004:16;1998:23;2068:3;2062:4;2058:14;2051:4;2046:3;2042:14;2035:38;2094:73;2162:4;2148:12;2094:73;:::i;:::-;2086:81;;1936:242;2265:4;2258:5;2254:16;2248:23;2284:63;2341:4;2336:3;2332:14;2318:12;2284:63;:::i;:::-;2188:169;2374:4;2367:11;;1890:494;1776:608;;;;:::o;2390:256::-;2509:10;2544:96;2636:3;2628:6;2544:96;:::i;:::-;2530:110;;2390:256;;;;:::o;2652:138::-;2747:4;2779;2774:3;2770:14;2762:22;;2652:138;;;:::o;2856:1111::-;3025:3;3054:79;3127:5;3054:79;:::i;:::-;3149:111;3253:6;3248:3;3149:111;:::i;:::-;3142:118;;3286:3;3331:4;3323:6;3319:17;3314:3;3310:27;3361:81;3436:5;3361:81;:::i;:::-;3465:7;3496:1;3481:441;3506:6;3503:1;3500:13;3481:441;;;3577:9;3571:4;3567:20;3562:3;3555:33;3628:6;3622:13;3656:114;3765:4;3750:13;3656:114;:::i;:::-;3648:122;;3793:85;3871:6;3793:85;:::i;:::-;3783:95;;3907:4;3902:3;3898:14;3891:21;;3541:381;3528:1;3525;3521:9;3516:14;;3481:441;;;3485:14;3938:4;3931:11;;3958:3;3951:10;;3030:937;;;;;2856:1111;;;;:::o;3973:473::-;4166:4;4204:2;4193:9;4189:18;4181:26;;4253:9;4247:4;4243:20;4239:1;4228:9;4224:17;4217:47;4281:158;4434:4;4425:6;4281:158;:::i;:::-;4273:166;;3973:473;;;;:::o;4452:126::-;4489:7;4529:42;4522:5;4518:54;4507:65;;4452:126;;;:::o;4584:96::-;4621:7;4650:24;4668:5;4650:24;:::i;:::-;4639:35;;4584:96;;;:::o;4686:118::-;4773:24;4791:5;4773:24;:::i;:::-;4768:3;4761:37;4686:118;;:::o;4810:222::-;4903:4;4941:2;4930:9;4926:18;4918:26;;4954:71;5022:1;5011:9;5007:17;4998:6;4954:71;:::i;:::-;4810:222;;;;:::o;5119:117::-;5228:1;5225;5218:12;5365:122;5438:24;5456:5;5438:24;:::i;:::-;5431:5;5428:35;5418:63;;5477:1;5474;5467:12;5418:63;5365:122;:::o;5493:139::-;5539:5;5577:6;5564:20;5555:29;;5593:33;5620:5;5593:33;:::i;:::-;5493:139;;;;:::o;5638:329::-;5697:6;5746:2;5734:9;5725:7;5721:23;5717:32;5714:119;;;5752:79;;:::i;:::-;5714:119;5872:1;5897:53;5942:7;5933:6;5922:9;5918:22;5897:53;:::i;:::-;5887:63;;5843:117;5638:329;;;;:::o;5973:180::-;6021:77;6018:1;6011:88;6118:4;6115:1;6108:15;6142:4;6139:1;6132:15;6159:320;6203:6;6240:1;6234:4;6230:12;6220:22;;6287:1;6281:4;6277:12;6308:18;6298:81;;6364:4;6356:6;6352:17;6342:27;;6298:81;6426:2;6418:6;6415:14;6395:18;6392:38;6389:84;;6445:18;;:::i;:::-;6389:84;6210:269;6159:320;;;:::o;6485:169::-;6569:11;6603:6;6598:3;6591:19;6643:4;6638:3;6634:14;6619:29;;6485:169;;;;:::o;6660:225::-;6800:34;6796:1;6788:6;6784:14;6777:58;6869:8;6864:2;6856:6;6852:15;6845:33;6660:225;:::o;6891:366::-;7033:3;7054:67;7118:2;7113:3;7054:67;:::i;:::-;7047:74;;7130:93;7219:3;7130:93;:::i;:::-;7248:2;7243:3;7239:12;7232:19;;6891:366;;;:::o;7263:419::-;7429:4;7467:2;7456:9;7452:18;7444:26;;7516:9;7510:4;7506:20;7502:1;7491:9;7487:17;7480:47;7544:131;7670:4;7544:131;:::i;:::-;7536:139;;7263:419;;;:::o;7688:182::-;7828:34;7824:1;7816:6;7812:14;7805:58;7688:182;:::o;7876:366::-;8018:3;8039:67;8103:2;8098:3;8039:67;:::i;:::-;8032:74;;8115:93;8204:3;8115:93;:::i;:::-;8233:2;8228:3;8224:12;8217:19;;7876:366;;;:::o;8248:419::-;8414:4;8452:2;8441:9;8437:18;8429:26;;8501:9;8495:4;8491:20;8487:1;8476:9;8472:17;8465:47;8529:131;8655:4;8529:131;:::i;:::-;8521:139;;8248:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "402000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getVoteDetails()": "infinite",
								"getWinner()": "423",
								"owner()": "2537",
								"renounceOwnership()": "30390",
								"transferOwnership(address)": "30797"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 959,
									"end": 1038,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 989,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 983,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 996,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 983,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 983,
									"end": 1031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1031,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 1347,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037fc36d50b54c11559d4aa3fae8a64df24f6dad8a2637edfc781be18e909194664736f6c63430008140033",
									".code": [
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "134C39CC"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "8E7EA5B2"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 1347,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1237,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1237,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1134,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1134,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1322,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1315,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1315,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 99,
											"end": 105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 127,
											"end": 139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 117,
											"end": 139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 117,
											"end": 139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 361,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 152,
											"end": 361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 276,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 298,
											"end": 317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 350,
											"end": 354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 341,
											"end": 355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 326,
											"end": 355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 326,
											"end": 355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 361,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 361,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 367,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 459,
											"end": 463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 512,
											"end": 516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 503,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 495,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 495,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 367,
											"end": 524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 530,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 530,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 610,
											"end": 622,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 600,
											"end": 622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 600,
											"end": 622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 530,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 530,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 530,
											"end": 629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 530,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 635,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 738,
											"end": 741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 731,
											"end": 750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 783,
											"end": 787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 774,
											"end": 788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 794,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 635,
											"end": 794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1046,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 899,
											"end": 912,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 990,
											"end": 991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 981,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 975,
											"end": 993,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 966,
											"end": 969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 962,
											"end": 973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 955,
											"end": 994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 927,
											"end": 929,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 915,
											"end": 930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 915,
											"end": 930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 891,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1027,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 862,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1140,
											"end": 1147,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1517,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1160,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1266,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1305,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1266,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1373,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1321,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1321,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1447,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1391,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1391,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1481,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1481,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1600,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1523,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1714,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1606,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1701,
											"end": 1706,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1683,
											"end": 1707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1707,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1683,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1776,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1919,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1926,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2049,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2094,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2167,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2094,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 2178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2347,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2284,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 2384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 2384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2390,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2636,
											"end": 2639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2544,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2544,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2646,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2790,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2652,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2774,
											"end": 2777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 3967,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2856,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3127,
											"end": 3132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3054,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3149,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3253,
											"end": 3259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3251,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3149,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3149,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3149,
											"end": 3260,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3149,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3142,
											"end": 3260,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3142,
											"end": 3260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3335,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3336,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3310,
											"end": 3337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3361,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3442,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3361,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3500,
											"end": 3513,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3555,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3635,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3765,
											"end": 3769,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3763,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3656,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3770,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3656,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3770,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3793,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3878,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3793,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3911,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3905,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3912,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3541,
											"end": 3922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3481,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3485,
											"end": 3499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 3942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3931,
											"end": 3942,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3931,
											"end": 3942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3958,
											"end": 3961,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3961,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 3967,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 3967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4446,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3973,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4193,
											"end": 4202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4263,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4434,
											"end": 4438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4281,
											"end": 4439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4439,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4281,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4446,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4578,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4452,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4571,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4522,
											"end": 4527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4507,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4507,
											"end": 4572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4452,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4680,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4584,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 4628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4668,
											"end": 4673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4650,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4674,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4650,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4639,
											"end": 4674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4639,
											"end": 4674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4791,
											"end": 4796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4773,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4926,
											"end": 4944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4954,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5119,
											"end": 5236,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5119,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5226,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5487,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5365,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5456,
											"end": 5461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5438,
											"end": 5462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5462,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5438,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5428,
											"end": 5463,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5477,
											"end": 5478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5539,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5564,
											"end": 5584,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5620,
											"end": 5625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5593,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5626,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5593,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5967,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5638,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5732,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5721,
											"end": 5744,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5749,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5833,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5714,
											"end": 5833,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5752,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5833,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5714,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5942,
											"end": 5949,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 5931,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5918,
											"end": 5940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5897,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5887,
											"end": 5950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5887,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5967,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5638,
											"end": 5967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6153,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5973,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6098,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6018,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6115,
											"end": 6116,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6108,
											"end": 6123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6146,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6139,
											"end": 6140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6147,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6479,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 6159,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6203,
											"end": 6209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6241,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6234,
											"end": 6238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6242,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6220,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6220,
											"end": 6242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6308,
											"end": 6326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6298,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 6298,
											"end": 6379,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6364,
											"end": 6368,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 6356,
											"end": 6362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6352,
											"end": 6369,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6342,
											"end": 6369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6342,
											"end": 6369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6298,
											"end": 6379,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 6298,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6428,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6418,
											"end": 6424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6429,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6389,
											"end": 6473,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6445,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6473,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6389,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6210,
											"end": 6479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6654,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6485,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6569,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6598,
											"end": 6601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6638,
											"end": 6641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6654,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6660,
											"end": 6885,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6660,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6834,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 6794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6784,
											"end": 6798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6877,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6864,
											"end": 6866,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6856,
											"end": 6862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6845,
											"end": 6878,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6660,
											"end": 6885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6660,
											"end": 6885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6891,
											"end": 7257,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6891,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7113,
											"end": 7116,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7054,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7054,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7054,
											"end": 7121,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 7054,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7121,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7130,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7243,
											"end": 7246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7232,
											"end": 7251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7232,
											"end": 7251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6891,
											"end": 7257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6891,
											"end": 7257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6891,
											"end": 7257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6891,
											"end": 7257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7682,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7263,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7429,
											"end": 7433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7465,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7452,
											"end": 7470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7510,
											"end": 7514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7506,
											"end": 7526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7502,
											"end": 7503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7480,
											"end": 7527,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7544,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 7670,
											"end": 7674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7544,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7544,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7544,
											"end": 7675,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 7544,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7675,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7688,
											"end": 7870,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7688,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7828,
											"end": 7862,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7824,
											"end": 7825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7822,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7812,
											"end": 7826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7805,
											"end": 7863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7688,
											"end": 7870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7688,
											"end": 7870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 8242,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7876,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8103,
											"end": 8105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8039,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 8039,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8039,
											"end": 8106,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8039,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8032,
											"end": 8106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8032,
											"end": 8106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8204,
											"end": 8207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 8115,
											"end": 8208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8233,
											"end": 8235,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8224,
											"end": 8236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8217,
											"end": 8236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8217,
											"end": 8236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 8242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 8242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 8242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8667,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 8248,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8452,
											"end": 8454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8441,
											"end": 8450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8429,
											"end": 8455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8491,
											"end": 8511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8485,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8489,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8465,
											"end": 8512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8655,
											"end": 8659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 8529,
											"end": 8660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8660,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8529,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Voting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getVoteDetails()": "134c39cc",
							"getWinner()": "8e7ea5b2",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getVoteDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Proposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Voting.sol\":\"Voting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Voting.sol\":{\"keccak256\":\"0x376c99924c214cf0e549a4235216af79e8e0e1c538100ffc33ebef8534f6b0ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0996dd920438aae61507efd3a88314eb86ab2ccd606c6c5003b6349305b4c62e\",\"dweb:/ipfs/Qmb8vz3L1sC2ZcuE1sMMW4fVVmAg2djzGV9Jd36S44MQdb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Voting.sol:Voting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 194,
								"contract": "Voting.sol:Voting",
								"label": "winningProposalId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 197,
								"contract": "Voting.sol:Voting",
								"label": "ballot",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Request)180_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)192_storage)dyn_storage": {
								"base": "t_struct(Proposal)192_storage",
								"encoding": "dynamic_array",
								"label": "struct Voting.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Voter)187_storage)dyn_storage": {
								"base": "t_struct(Voter)187_storage",
								"encoding": "dynamic_array",
								"label": "struct Voting.Voter[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(WorkflowStatus)144": {
								"encoding": "inplace",
								"label": "enum WorkflowStatus",
								"numberOfBytes": "1"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)192_storage": {
								"encoding": "inplace",
								"label": "struct Voting.Proposal",
								"members": [
									{
										"astId": 189,
										"contract": "Voting.sol:Voting",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 191,
										"contract": "Voting.sol:Voting",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Request)180_storage": {
								"encoding": "inplace",
								"label": "struct Voting.Request",
								"members": [
									{
										"astId": 171,
										"contract": "Voting.sol:Voting",
										"label": "status",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(WorkflowStatus)144"
									},
									{
										"astId": 175,
										"contract": "Voting.sol:Voting",
										"label": "voter",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Voter)187_storage)dyn_storage"
									},
									{
										"astId": 179,
										"contract": "Voting.sol:Voting",
										"label": "proposals",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_struct(Proposal)192_storage)dyn_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Voter)187_storage": {
								"encoding": "inplace",
								"label": "struct Voting.Voter",
								"members": [
									{
										"astId": 182,
										"contract": "Voting.sol:Voting",
										"label": "isRegistered",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 184,
										"contract": "Voting.sol:Voting",
										"label": "hasVoted",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 186,
										"contract": "Voting.sol:Voting",
										"label": "votedProposalId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Voting.sol": {
				"ast": {
					"absolutePath": "Voting.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"Voting": [
							231
						],
						"WorkflowStatus": [
							144
						]
					},
					"id": 232,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 232,
							"sourceUnit": 113,
							"src": "57:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "WorkflowStatus",
							"id": 144,
							"members": [
								{
									"id": 138,
									"name": "RegisteringVoters",
									"nameLocation": "137:17:2",
									"nodeType": "EnumValue",
									"src": "137:17:2"
								},
								{
									"id": 139,
									"name": "ProposalsRegistrationStarted",
									"nameLocation": "160:28:2",
									"nodeType": "EnumValue",
									"src": "160:28:2"
								},
								{
									"id": 140,
									"name": "ProposalsRegistrationEnded",
									"nameLocation": "194:26:2",
									"nodeType": "EnumValue",
									"src": "194:26:2"
								},
								{
									"id": 141,
									"name": "VotingSessionStarted",
									"nameLocation": "226:20:2",
									"nodeType": "EnumValue",
									"src": "226:20:2"
								},
								{
									"id": 142,
									"name": "VotingSessionEnded",
									"nameLocation": "252:18:2",
									"nodeType": "EnumValue",
									"src": "252:18:2"
								},
								{
									"id": 143,
									"name": "VotesTallied",
									"nameLocation": "276:12:2",
									"nodeType": "EnumValue",
									"src": "276:12:2"
								}
							],
							"name": "WorkflowStatus",
							"nameLocation": "116:14:2",
							"nodeType": "EnumDefinition",
							"src": "111:179:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 145,
										"name": "Ownable",
										"nameLocations": [
											"311:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "311:7:2"
									},
									"id": 146,
									"nodeType": "InheritanceSpecifier",
									"src": "311:7:2"
								}
							],
							"canonicalName": "Voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 231,
							"linearizedBaseContracts": [
								231,
								112,
								134
							],
							"name": "Voting",
							"nameLocation": "301:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd",
									"id": 150,
									"name": "VoterRegistered",
									"nameLocation": "331:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "voterAddress",
												"nameLocation": "355:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "347:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:22:2"
									},
									"src": "325:44:2"
								},
								{
									"anonymous": false,
									"eventSelector": "0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f",
									"id": 158,
									"name": "WorkflowStatusChange",
									"nameLocation": "380:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousStatus",
												"nameLocation": "425:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "410:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$144",
													"typeString": "enum WorkflowStatus"
												},
												"typeName": {
													"id": 152,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 151,
														"name": "WorkflowStatus",
														"nameLocations": [
															"410:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 144,
														"src": "410:14:2"
													},
													"referencedDeclaration": 144,
													"src": "410:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$144",
														"typeString": "enum WorkflowStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStatus",
												"nameLocation": "464:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "449:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$144",
													"typeString": "enum WorkflowStatus"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "WorkflowStatus",
														"nameLocations": [
															"449:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 144,
														"src": "449:14:2"
													},
													"referencedDeclaration": 144,
													"src": "449:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$144",
														"typeString": "enum WorkflowStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:79:2"
									},
									"src": "374:106:2"
								},
								{
									"anonymous": false,
									"eventSelector": "92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f",
									"id": 162,
									"name": "ProposalRegistered",
									"nameLocation": "491:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "518:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "510:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:20:2"
									},
									"src": "485:45:2"
								},
								{
									"anonymous": false,
									"eventSelector": "4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca4",
									"id": 168,
									"name": "Voted",
									"nameLocation": "541:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "555:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "547:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "570:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "562:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:35:2"
									},
									"src": "535:47:2"
								},
								{
									"canonicalName": "Voting.Request",
									"id": 180,
									"members": [
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "628:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "613:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_WorkflowStatus_$144",
												"typeString": "enum WorkflowStatus"
											},
											"typeName": {
												"id": 170,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 169,
													"name": "WorkflowStatus",
													"nameLocations": [
														"613:14:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 144,
													"src": "613:14:2"
												},
												"referencedDeclaration": 144,
												"src": "613:14:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$144",
													"typeString": "enum WorkflowStatus"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "voter",
											"nameLocation": "652:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "644:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Voter_$187_storage_$dyn_storage_ptr",
												"typeString": "struct Voting.Voter[]"
											},
											"typeName": {
												"baseType": {
													"id": 173,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 172,
														"name": "Voter",
														"nameLocations": [
															"644:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 187,
														"src": "644:5:2"
													},
													"referencedDeclaration": 187,
													"src": "644:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$187_storage_ptr",
														"typeString": "struct Voting.Voter"
													}
												},
												"id": 174,
												"nodeType": "ArrayTypeName",
												"src": "644:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Voter_$187_storage_$dyn_storage_ptr",
													"typeString": "struct Voting.Voter[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 179,
											"mutability": "mutable",
											"name": "proposals",
											"nameLocation": "678:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 180,
											"src": "667:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Proposal_$192_storage_$dyn_storage_ptr",
												"typeString": "struct Voting.Proposal[]"
											},
											"typeName": {
												"baseType": {
													"id": 177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 176,
														"name": "Proposal",
														"nameLocations": [
															"667:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 192,
														"src": "667:8:2"
													},
													"referencedDeclaration": 192,
													"src": "667:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$192_storage_ptr",
														"typeString": "struct Voting.Proposal"
													}
												},
												"id": 178,
												"nodeType": "ArrayTypeName",
												"src": "667:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Proposal_$192_storage_$dyn_storage_ptr",
													"typeString": "struct Voting.Proposal[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nameLocation": "595:7:2",
									"nodeType": "StructDefinition",
									"scope": 231,
									"src": "588:106:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.Voter",
									"id": 187,
									"members": [
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "728:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 187,
											"src": "723:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "723:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "hasVoted",
											"nameLocation": "755:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 187,
											"src": "750:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 183,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "750:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 186,
											"mutability": "mutable",
											"name": "votedProposalId",
											"nameLocation": "781:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 187,
											"src": "773:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 185,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "773:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "707:5:2",
									"nodeType": "StructDefinition",
									"scope": 231,
									"src": "700:103:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.Proposal",
									"id": 192,
									"members": [
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "841:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "834:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 188,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "834:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "870:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "862:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 190,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "862:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "815:8:2",
									"nodeType": "StructDefinition",
									"scope": 231,
									"src": "808:78:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "winningProposalId",
									"nameLocation": "900:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "892:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "892:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "ballot",
									"nameLocation": "946:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "938:14:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Request_$180_storage",
										"typeString": "struct Voting.Request"
									},
									"typeName": {
										"id": 196,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 195,
											"name": "Request",
											"nameLocations": [
												"938:7:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 180,
											"src": "938:7:2"
										},
										"referencedDeclaration": 180,
										"src": "938:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Request_$180_storage_ptr",
											"typeString": "struct Voting.Request"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "973:65:2",
										"statements": [
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 200,
															"name": "ballot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "983:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Request_$180_storage",
																"typeString": "struct Voting.Request storage ref"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "990:6:2",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "983:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$144",
															"typeString": "enum WorkflowStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 203,
															"name": "WorkflowStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "999:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$144_$",
																"typeString": "type(enum WorkflowStatus)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1014:17:2",
														"memberName": "RegisteringVoters",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "999:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$144",
															"typeString": "enum WorkflowStatus"
														}
													},
													"src": "983:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$144",
														"typeString": "enum WorkflowStatus"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "983:48:2"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:0:2"
									},
									"scope": 231,
									"src": "959:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1187:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1212:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Voting_$231",
																"typeString": "contract Voting"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Voting_$231",
																"typeString": "contract Voting"
															}
														],
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1204:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 213,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1204:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1204:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 212,
												"id": 217,
												"nodeType": "Return",
												"src": "1197:20:2"
											}
										]
									},
									"functionSelector": "8e7ea5b2",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinner",
									"nameLocation": "1143:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1152:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1178:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:2"
									},
									"scope": 231,
									"src": "1134:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1305:40:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 226,
														"name": "ballot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1322:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$180_storage",
															"typeString": "struct Voting.Request storage ref"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1329:9:2",
													"memberName": "proposals",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 179,
													"src": "1322:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Proposal_$192_storage_$dyn_storage",
														"typeString": "struct Voting.Proposal storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 225,
												"id": 228,
												"nodeType": "Return",
												"src": "1315:23:2"
											}
										]
									},
									"functionSelector": "134c39cc",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoteDetails",
									"nameLocation": "1246:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:2:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1286:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Proposal_$192_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Voting.Proposal[]"
												},
												"typeName": {
													"baseType": {
														"id": 222,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 221,
															"name": "Proposal",
															"nameLocations": [
																"1286:8:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 192,
															"src": "1286:8:2"
														},
														"referencedDeclaration": 192,
														"src": "1286:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$192_storage_ptr",
															"typeString": "struct Voting.Proposal"
														}
													},
													"id": 223,
													"nodeType": "ArrayTypeName",
													"src": "1286:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Proposal_$192_storage_$dyn_storage_ptr",
														"typeString": "struct Voting.Proposal[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:19:2"
									},
									"scope": 231,
									"src": "1237:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 232,
							"src": "292:1055:2",
							"usedErrors": [],
							"usedEvents": [
								13,
								150,
								158,
								162,
								168
							]
						}
					],
					"src": "32:1316:2"
				},
				"id": 2
			}
		}
	}
}